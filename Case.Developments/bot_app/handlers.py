from telegram import Update
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from config import PROMO_CODE
from database import Database

db = Database()

ASK_NAME, ASK_EMAIL, ASK_PHONE = range(3)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ Google Sheets ‚Äî –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –±—ã–ª –≤—ã–¥–∞–Ω
    if db.check_user(user_id):
        await update.message.reply_text("‚ùå –í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ üéÅ")
        return ConversationHandler.END

    context.user_data["user_id"] = user_id
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ üòä")
    return ASK_NAME


async def ask_email(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["name"] = update.message.text.strip()
    await update.message.reply_text("üìß –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É")
    return ASK_EMAIL


async def ask_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["email"] = update.message.text.strip()
    await update.message.reply_text("üì± –ò, –Ω–∞–∫–æ–Ω–µ—Ü, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    return ASK_PHONE


async def save_and_finish(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["phone"] = update.message.text.strip()

    user_id = context.user_data["user_id"]
    name = context.user_data["name"]
    email = context.user_data["email"]
    phone = context.user_data["phone"]

    # 1) –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets
    db.add_user(user_id, name, email, phone)
    # 2) –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–¥–∞—Ä–æ–∫ –≤—ã–¥–∞–Ω (5-–π —Å—Ç–æ–ª–±–µ—Ü ‚Üí '–¥–∞')
    db.mark_gift_sent(user_id)

    # 3) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
    await update.message.reply_text(
        f"‚úÖ –°–ø–∞—Å–∏–±–æ, {name}! –í–æ—Ç –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: *{PROMO_CODE}*", parse_mode="Markdown"
    )
    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("‚ùå –û—Ç–º–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ /start, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞.")
    return ConversationHandler.END


def get_handlers():
    return ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_email)],
            ASK_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_phone)],
            ASK_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_and_finish)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
